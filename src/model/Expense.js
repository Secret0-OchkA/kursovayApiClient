/**
 * My API - V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: ne bydet
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Expense model module.
 * @module model/Expense
 * @version v1
 */
class Expense {
    /**
     * Constructs a new <code>Expense</code>.
     * @alias module:model/Expense
     */
    constructor() { 
        
        Expense.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Expense</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Expense} obj Optional instance to populate.
     * @return {module:model/Expense} The populated <code>Expense</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Expense();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('createDate')) {
                obj['createDate'] = ApiClient.convertToType(data['createDate'], 'Date');
            }
            if (data.hasOwnProperty('modifyDate')) {
                obj['modifyDate'] = ApiClient.convertToType(data['modifyDate'], 'Date');
            }
            if (data.hasOwnProperty('confirm')) {
                obj['confirm'] = ApiClient.convertToType(data['confirm'], 'Boolean');
            }
            if (data.hasOwnProperty('valid')) {
                obj['valid'] = ApiClient.convertToType(data['valid'], 'Boolean');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Expense</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Expense</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} id
 */
Expense.prototype['id'] = undefined;

/**
 * @member {Date} createDate
 */
Expense.prototype['createDate'] = undefined;

/**
 * @member {Date} modifyDate
 */
Expense.prototype['modifyDate'] = undefined;

/**
 * @member {Boolean} confirm
 */
Expense.prototype['confirm'] = undefined;

/**
 * @member {Boolean} valid
 */
Expense.prototype['valid'] = undefined;

/**
 * @member {Date} date
 */
Expense.prototype['date'] = undefined;

/**
 * @member {Number} amount
 */
Expense.prototype['amount'] = undefined;






export default Expense;

