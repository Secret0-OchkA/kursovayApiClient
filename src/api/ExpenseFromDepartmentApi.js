/**
 * My API - V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: ne bydet
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Expense from '../model/Expense';

/**
* ExpenseFromDepartment service.
* @module api/ExpenseFromDepartmentApi
* @version v1
*/
export default class ExpenseFromDepartmentApi {

    /**
    * Constructs a new ExpenseFromDepartmentApi. 
    * @alias module:api/ExpenseFromDepartmentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getExpenseInDeparment operation.
     * @callback module:api/ExpenseFromDepartmentApi~getExpenseInDeparmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Expense} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get expense in department by id
     * @param {Number} companyId 
     * @param {Number} departmnetId 
     * @param {Number} expenseId 
     * @param {module:api/ExpenseFromDepartmentApi~getExpenseInDeparmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Expense}
     */
    getExpenseInDeparment(companyId, departmnetId, expenseId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getExpenseInDeparment");
      }
      // verify the required parameter 'departmnetId' is set
      if (departmnetId === undefined || departmnetId === null) {
        throw new Error("Missing the required parameter 'departmnetId' when calling getExpenseInDeparment");
      }
      // verify the required parameter 'expenseId' is set
      if (expenseId === undefined || expenseId === null) {
        throw new Error("Missing the required parameter 'expenseId' when calling getExpenseInDeparment");
      }

      let pathParams = {
        'companyId': companyId,
        'departmnetId': departmnetId,
        'expenseId': expenseId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Expense;
      return this.apiClient.callApi(
        '/api/Company/{companyId}/Department/{departmnetId}/ExpenseFromDepartment/{expenseId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getExpesesInDepartment operation.
     * @callback module:api/ExpenseFromDepartmentApi~getExpesesInDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Expense>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get expenses in department
     * @param {Number} companyId 
     * @param {Number} departmnetId 
     * @param {module:api/ExpenseFromDepartmentApi~getExpesesInDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Expense>}
     */
    getExpesesInDepartment(companyId, departmnetId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getExpesesInDepartment");
      }
      // verify the required parameter 'departmnetId' is set
      if (departmnetId === undefined || departmnetId === null) {
        throw new Error("Missing the required parameter 'departmnetId' when calling getExpesesInDepartment");
      }

      let pathParams = {
        'companyId': companyId,
        'departmnetId': departmnetId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Expense];
      return this.apiClient.callApi(
        '/api/Company/{companyId}/Department/{departmnetId}/ExpenseFromDepartment', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
